{"version":3,"sources":["components/Header.js","components/Generator.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Generator","state","gender","name","birth","username","password","email","nat","cellphone","address","nationalId","picture","handleChange","bind","handleSubmit","domains","Math","floor","random","length","event","target","value","this","setState","preventDefault","apiCall","fetch","then","response","json","results","data","first","last","dob","date","split","login","randomEmail","cell","location","street","number","postcode","city","id","large","onSubmit","type","onChange","htmlFor","className","src","alt","Component","Footer","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5d3e83e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <h1>Identity Generator</h1>\r\n                <p>A new you.</p>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react'\r\n\r\nexport class Generator extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            gender: 'male',\r\n            name: '',\r\n            birth: '',\r\n            username: '',\r\n            password: '',\r\n            email: '',\r\n            nat: 'US',\r\n            cellphone: '',\r\n            address: '',\r\n            nationalId: '',\r\n            picture: '',\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    randomEmail() {\r\n        let domains = [\"gmail.com\", \"hotmail.com\", \"tutanota.com\", \"protonmail.com\", \"yahoo.com\"];\r\n        return \"@\" + domains[Math.floor(Math.random() * domains.length)];\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let apiCall = \"https://randomuser.me/api/1.3/?nat=\" + this.state.nat + \"&gender=\" + this.state.gender + \"&password=upper,lower,number,8-16&noinfo\";\r\n        fetch(apiCall)\r\n            .then(response => response.json())\r\n            .then(json => json.results[0])\r\n            .then(data => {\r\n                this.setState({\r\n                    name: data.name.first + \" \" + data.name.last,\r\n                    birth: data.dob.date.split('T')[0],\r\n                    username: data.login.username,\r\n                    password: data.login.password,\r\n                    email: data.email.split('@')[0] + this.randomEmail(),\r\n                    cellphone: data.cell,\r\n                    address: data.location.street.name + \" \" + data.location.street.number + \", \" + data.location.postcode + \" \" + data.location.city,\r\n                    nationalId: data.id.value,\r\n                    picture: data.picture.large\r\n                })\r\n            });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <main>\r\n                    <br />\r\n                    <form onSubmit={this.handleSubmit}>\r\n\r\n                        <b>Gender</b><br />\r\n                        <input name=\"gender\" type=\"radio\" value=\"male\" id=\"male\" onChange={this.handleChange} />\r\n                        <label htmlFor=\"male\">Male</label> <br />\r\n                        <input name=\"gender\" type=\"radio\" value=\"female\" id=\"female\" onChange={this.handleChange} />\r\n                        <label htmlFor=\"female\">Female</label> <br /><br />\r\n\r\n                        <b>Nationality</b><br />\r\n                        <input name=\"nat\" type=\"radio\" value=\"US\" id=\"US\" onChange={this.handleChange} />\r\n                        <label htmlFor=\"US\">American</label> <br />\r\n\r\n                        <input name=\"nat\" type=\"radio\" value=\"NO\" id=\"NO\" onChange={this.handleChange} />\r\n                        <label htmlFor=\"NO\">Norwegian</label> <br /><br />\r\n\r\n                        <button>Generate identity</button>\r\n                    </form>\r\n\r\n\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className=\"muted\">Name</td>\r\n                                <td>{this.state.name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"muted\">Date of birth</td>\r\n                                <td>{this.state.birth}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"muted\">Username</td>\r\n                                <td>{this.state.username}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"muted\">Password</td>\r\n                                <td>{this.state.password}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"muted\">E-mail</td>\r\n                                <td>{this.state.email}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"muted\">Phone number</td>\r\n                                <td>{this.state.cellphone}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"muted\">Address</td>\r\n                                <td>{this.state.address}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"muted\">National ID</td>\r\n                                <td>{this.state.nationalId}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <h3>Picture</h3>\r\n                    <img src={this.state.picture} alt=\"User avatar here.\" />\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Generator\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            <footer>\r\n                <p>\r\n                    Identity Generator created by <a href=\"https://github.com/mrtangdev\">me</a> using <a href=\"https://github.com/RandomAPI\">RandomAPI</a> and <a href=\"https://simplecss.org/\">SimpleCSS</a>.\r\n                </p>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import './App.css';\nimport Header from './components/Header';\nimport Generator from './components/Generator';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n          <Header />\n          <Generator />\n          <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}